{
  "name": "Monix Task Foundations",
  "description": "Fundamental topics for learning to program using Monix Task",
  "lessons": [
    {
      "id": "introduction",
      "title": "Introduction",
      "authorIds": [
        "piotr-gawrys"
      ],
      "duration": 10,
      "video": "https://www.youtube.com/embed/t3mLyEt5c8A",
      "description": "This is the introduction to Monix course, which is intended for Functional Programming beginners who have had little or no exposure to effect types, like Monix Task. In the beginner level of the course we will start from nothing, learn how to use a Task, and see how it can be used in real-life applications."
    },
    {
      "id": "creationandexecution",
      "title": "Task Creation And Execution",
      "authorIds": [
        "piotr-gawrys"
      ],
      "duration": 20,
      "video": "https://www.youtube.com/embed/B_7B7Hb1MpM",
      "description": "Task[A] represents a specification for a computation that after execution will produce either a value of type A, fail with an error, or potentially never terminate. In this lesson, we will learn how to create and execute Task."
    },
    {
      "id": "basictransformations",
      "title": "Basic Transformations",
      "authorIds": [
        "piotr-gawrys"
      ],
      "duration": 20,
      "video": "https://www.youtube.com/embed/uxmsIQJuCSQ",
      "description": "This lesson explains how to transform a Task, and what we mean by pure functional programming."
    },
    {
      "id": "errorhandling",
      "title": "Error Handling",
      "authorIds": [
        "piotr-gawrys"
      ],
      "duration": 20,
      "video": "https://www.youtube.com/embed/x_NTAloSBh8",
      "description": "Task can fail with an error for a variety of reasons. In this lesson, we will learn how to recover from errors."
    },
    {
      "id": "basicconcurrency",
      "title": "Basic Concurrency",
      "authorIds": [
        "piotr-gawrys"
      ],
      "duration": 30,
      "video": "https://www.youtube.com/embed/5PInsnw0puI",
      "description": "One of the main appeals of Monix Task is rich support for asynchronous operations. We will learn about concurrency and how it relates to Monix."
    },
    {
      "id": "threadmanagement",
      "title": "Thread Management",
      "authorIds": [
        "piotr-gawrys"
      ],
      "duration": 30,
      "video": "https://www.youtube.com/embed/BnGXLe6Rybk",
      "description": "In this lesson, we will learn more about lower level details of concurrency mechanisms that power Monix Task. The lesson covers thread pools and how tasks are scheduled to execute."
    },
    {
      "id": "resourcesafety",
      "title": "Resource Safety",
      "authorIds": [
        "piotr-gawrys"
      ],
      "video": "https://www.youtube.com/embed/FC16ZpqhWaY",
      "duration": 20,
      "description": "Many tasks use some resources, such as a connection pool, a filehandle, or a socket. The lesson explains how to write resource-safe code with Task and what are its advantages over the standard library."
    }
  ]
}
